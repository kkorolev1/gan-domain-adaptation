defaults:
  - models

name: "train"
gpus: [0]

batch_size: 4
len_epoch: 1000

optimizer_encoder:
  _target_: torch.optim.Adam
  lr: 1e-4

lr_scheduler_encoder:
  _target_: torch.optim.lr_scheduler.ExponentialLR
  gamma: 1

# ema:
#   _target_: ema_pytorch.EMA
#   beta: 0.9999
#   update_after_step: 1
#   update_every: 50

metrics:
  - _target_: degan.metric.MeanSemanticScore
  - _target_: degan.metric.MeanDiversityScore
  - _target_: degan.metric.DomainOffsetNorm
    name: domain_offset_norm_0
    chunk_index: 0
  - _target_: degan.metric.DomainOffsetNorm
    name: domain_offset_norm_1
    chunk_index: 1
  - _target_: degan.metric.DomainOffsetNorm
    name: domain_offset_norm_2
    chunk_index: 2
  - _target_: degan.metric.DomainOffsetNorm
    name: domain_offset_norm_3
    chunk_index: 3
  - _target_: degan.metric.DomainOffsetNorm
    name: domain_offset_norm_4
    chunk_index: 4
  - _target_: degan.metric.DomainOffsetNorm
    name: domain_offset_norm_5
    chunk_index: 5
  - _target_: degan.metric.DomainOffsetNorm
    name: domain_offset_norm_6
    chunk_index: 6
  - _target_: degan.metric.DomainOffsetNorm
    name: domain_offset_norm_7
    chunk_index: 7
  - _target_: degan.metric.DomainOffsetNorm
    name: domain_offset_norm_8
    chunk_index: 8
  - _target_: degan.metric.DomainOffsetNorm
    name: domain_offset_norm_9
    chunk_index: 9
  - _target_: degan.metric.DomainOffsetNorm
    name: domain_offset_norm_10
    chunk_index: 10
  - _target_: degan.metric.DomainOffsetNorm
    name: domain_offset_norm_11
    chunk_index: 11
  - _target_: degan.metric.DomainOffsetNorm
    name: domain_offset_norm_12
    chunk_index: 12
  - _target_: degan.metric.DomainOffsetNorm
    name: domain_offset_norm_13
    chunk_index: 13
  - _target_: degan.metric.DomainOffsetNorm
    name: domain_offset_norm_14
    chunk_index: 14
  - _target_: degan.metric.DomainOffsetNorm
    name: domain_offset_norm_15
    chunk_index: 15
  - _target_: degan.metric.DomainOffsetNorm
    name: domain_offset_norm_16
    chunk_index: 16
  - _target_: degan.metric.DomainOffsetNorm
    name: domain_offset_norm_17
    chunk_index: 17

loss:
  _target_: degan.loss.CompositeLoss
  loss_modules:
    - _target_: degan.loss.DirectionLoss
      name: loss_direction
      mult: 1
    - _target_: degan.loss.TTDirectionLoss
      name: loss_tt_direction
      mult: 1
    - _target_: degan.loss.CLIPResonstructionLoss
      name: loss_clip_rec
      mult: 1

transform:
  _target_: torchvision.transforms.v2.Compose
  transforms:
    - _target_: torchvision.transforms.v2.Resize
      size: [1024, 1024]
    - _target_: torchvision.transforms.v2.ToImage
    - _target_: torchvision.transforms.v2.ToDtype
      dtype: 
        _target_: degan.utils.types.TorchFloat32
      scale: True
    - _target_: torchvision.transforms.v2.Normalize
      mean: [0.5, 0.5, 0.5]
      std: [0.5, 0.5, 0.5]

data:
  train:
    batch_size: ${batch_size}
    num_workers: 5
    datasets:
      - _target_: degan.datasets.DomainLatentDataset
        root_path: datasets/train
        domain_limit: 10000
        transform: ${transform}
        sample_latent: True
  val:
    batch_size: ${batch_size}
    num_workers: 5
    datasets:
      - _target_: degan.datasets.DomainLatentDataset
        root_path: datasets/val
        transform: ${transform}
        sample_latent: False
  # val_ema:
  #   batch_size: ${batch_size}
  #   num_workers: 5
  #   datasets:
  #     - _target_: degan.datasets.DomainLatentDataset
  #       root_path: datasets/val
  #       transform: ${transform}
  #       sample_latent: False

trainer: 
  epochs: 100
  save_dir: "saved/"
  save_period: 5
  verbosity: 2
  monitor: "max val_MeanSemanticScore"
  early_stop: 100
  visualize: "wandb"
  wandb_project: "degan_project"
  wandb_run_name: "ViT_with_rec_loss"
  len_epoch: ${len_epoch}
  grad_norm_clip: 100
  grad_accumulation_steps: 2

wandb_key: 91898ab676432e8d5689a2ce4a88f7131dc1e45c